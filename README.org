#+TITLE: Flake configuration
#+AUTHOR: Tulkdan
#+EMAIL: pedro8correa@gmail.com

#+begin_src nix :tangle flake.nix :noweb yes
  {
    <<description>>

    inputs = {
      <<inputs>>
    };

    outputs = { self, nixpkgs, home-manager, ... }@inputs: let
      system = "x86_64-linux";
      hostname = "nixos";
      stateVersion = "23.05";
      pkgs = import nixpkgs {
        inherit system;
      };
      users = {
        pedro = {
          username = "pedro";
        };
        work = {
          username = "pedro-correa";
        };
      };
    in {
      <<outputs>>
    };
  }
#+end_src

** Description
#+NAME: description
#+begin_src nix
  description = "Tulk'dan's system config";
#+end_src

** Inputs
:PROPERTIES:
:header-args: :noweb-ref inputs
:END:

*** Nixpkgs

#+begin_src nix
  nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
#+end_src

*** Home Manager
#+begin_src nix
  home-manager = {
    url = "github:nix-community/home-manager";
    inputs.nixpkgs.follows = "nixpkgs";
  };
#+end_src

** Outputs
:PROPERTIES:
:header-args: :noweb-ref outputs
:END:

*** Formatter
#+begin_src nix
    formatter.x86_64-linux = pkgs.alejandra;
#+end_src

*** NixOS System
#+begin_src nix
  nixosConfigurations = {
    ${hostname} = nixpkgs.lib.nixosSystem {
      inherit system;

      modules = [
        ./hosts/desktop
      ];
    };
  };
#+end_src

*** Home Manager

**** Personal
#+begin_src nix
  homeConfigurations = {
    pedro = home-manager.lib.homeManagerConfiguration {
      inherit pkgs;
      extraSpecialArgs = {
        inherit stateVersion;
        username = users.pedro.username;
      };
      modules = [
        ./home
        ./home/personal.nix
      ];
    };
  };
#+end_src

**** Work
#+begin_src nix
  homeConfigurations = {
    work = home-manager.lib.homeManagerConfiguration {
      inherit pkgs;
      extraSpecialArgs = {
        inherit stateVersion;
        username = users.work.username;
      };
      modules = [
        ./home
        ./home/work.nix
      ];
    };
  };
#+end_src
